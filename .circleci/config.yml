version: 2
aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir $WORKDIR
      cd $WORKDIR
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh
      bash ./Miniconda3-latest-Linux-x86_64.sh -b -p miniconda

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      ./install_script.sh -v -d

  - &check_vcdat_versions
    name: check_npm_version
    command: |
      LOCAL_VCDAT_VERSION=`node -pe "require('./package.json').version"`
      NPM_VCDAT_VERSION=`npm view jupyter-vcdat@nightly version`
      echo "export LOCAL_VCDAT_VERSION=$LOCAL_VCDAT_VERSION" >> $BASH_ENV
      echo "export NPM_VCDAT_VERSION=$NPM_VCDAT_VERSION" >> $BASH_ENV
      function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
      if version_gt $LOCAL_VCDAT_VERSION $NPM_VCDAT_VERSION; then
        echo "Version of $LOCAL_VCDAT_VERSION in the package.json looks good."
      else
        echo "Version $LOCAL_VCDAT_VERSION in package.json is not newer than npm version of $NPM_VCDAT_VERSION and will cause Publish job to fail."
        echo "You should update version $LOCAL_VCDAT_VERSION in package.json to a version greater than $NPM_VCDAT_VERSION"
        exit 1
      fi

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      conda list
      jupyter lab --ip='127.0.0.1'
    background: true

  - &run_tests_with_chrome
    name: run_tests_with_chrome
    environment:
      BROWSER_TYPE: "chrome"
      BROWSER_DRIVER: "/usr/bin/chromedriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      npx task test -v --ready --chrome
      RESULT=$?
      echo "*** $PY_VER test result: ${RESULT}"
      exit $RESULT

  - &run_tests_with_firefox
    name: run_tests_with_firefox
    environment:
      BROWSER_TYPE: "firefox"
      BROWSER_BINARY: "/usr/bin/firefox"
      BROWSER_DRIVER: "/usr/bin/geckodriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      npx task test -v --ready --firefox
      RESULT=$?
      echo "*** $PY_VER test result: ${RESULT}"
      exit $RESULT

  - &conda_upload
    name: conda_upload
    environment:
      CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
      export REPO_DIR=`pwd`
      export PKG_NAME=jupyter-vcdat-$LOCAL_VCDAT_VERSION.`date +%Y*`0.tar.bz2
      export LABEL=experimental
      export USER=downiec
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      conda install conda-build anaconda-client
      conda config --set anaconda_upload no
      export CONDA_BLD_PATH=`pwd`/conda_build
      conda build $CHANNELS recipe
      anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/noarch/$PKG_NAME --force

  - &npm_publish
    name: npm_publish
    command: |
      npm install
      npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      npm publish --tag nightly

  - &docker_publish
    name: docker_publish
    command: |
      cd deploy
      echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
      echo "$DOCKER_TOKEN2" | docker login --username $DOCKER_USER --password-stdin $DOCKER_IMAGE_SOURCE
      docker pull $DOCKER_BASE_IMAGE
      docker build --build-arg work_dir='$WORKDIR/' --no-cache --tag=cdat/vcdat:test .
      docker push cdat/vcdat:test
      docker logout

jobs:
  publish:
    docker:
      - image: circleci/node:latest
    environment:
      WORKDIR: "publish"
    steps:
      - checkout
      - run: *check_vcdat_versions
      #- run: *npm_publish
      - setup_remote_docker
      #- run: *docker_publish
      - run: *setup_miniconda
      #- run: *setup_jupyter_vcdat
      - run: *conda_upload

  linux_chrome:
    docker:
      - image: selenium/node-chrome
    environment:
      WORKDIR: "linux_chrome"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_chrome
      - store_artifacts:
          path: tests_html
          destination: tests_chrome_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_chrome_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

  linux_firefox:
    docker:
      - image: selenium/node-firefox
    environment:
      WORKDIR: "linux_firefox"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_firefox
      - store_artifacts:
          path: tests_html
          destination: tests_firefox_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_firefox_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      - publish
