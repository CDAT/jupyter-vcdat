version: 2
aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    environment:
       CHANNELS: "-c cdat/label/nightly -c pcmdi/label/nightly -c conda-forge"
       PKGS: "nodejs 'python=3.7' vcs pip nb_conda nb_conda_kernels plumbum mesalib jupyterlab jupyterhub vcsaddons wk eofs windspharm autopep8 scipy scikit-learn cmor testsrunner cdat_info"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --add channels pcmdi/label/nightly --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority strict
       conda create -y -n jupyter-vcdat $CHANNELS $PKGS
       conda activate jupyter-vcdat
       pip install lazy_import
       pip install sidecar
       jupyter labextension install @jupyter-widgets/jupyterlab-manager
       jupyter labextension install jupyterlab-tutorial-extension
       jupyter labextension install @jupyter-widgets/jupyterlab-sidecar
       jupyter labextension install @jupyterlab/github
       pip install jupyterlab_github
       jupyter serverextension enable --sys-prefix jupyterlab_github
       pip install nbgitpuller
       jupyter serverextension enable --py nbgitpuller --sys-prefix
       jupyter labextension install @jupyterlab/hub-extension

       pip install selenium
       pip install pyvirtualdisplay
       rm -rf node_modules
       rm -rf ~/.cache/pip

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate jupyter-vcdat
       conda list
       jupyter lab --ip='127.0.0.1'
    background: true

  - &run_tests_with_chrome
    name: run_tests_with_chrome
    environment:
      BROWSER_TYPE: "chrome"
      BROWSER_DRIVER: "/usr/local/bin/chromedriver"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate jupyter-vcdat
       python run_tests.py -H -v 2 tests/test_locators.py
       python run_tests.py -H -v 2 tests/test_load_a_variable.py
       python run_tests.py -H -v 2 tests/test_load_variables_popup_locators.py
       python run_tests.py -H -v 2 tests/test_plot_locators.py
       python run_tests.py -H -v 2 tests/test_edit_axis_locators.py
       RESULT=$?
       echo "*** $PY_VER test result: ${RESULT}"
       exit $RESULT

  - &run_tests_with_firefox
    name: run_tests_with_firefox
    environment:
      BROWSER_TYPE: "firefox"
      BROWSER_BINARY: "/usr/local/bin/firefox"
      BROWSER_DRIVER: "/usr/local/bin/geckodriver"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate jupyter-vcdat
       #python run_tests.py -H -v 2 tests/test_locators.py
       python run_tests.py -H -v 2 tests/test_load_a_variable.py
       #python run_tests.py -H -v 2 tests/test_load_variables_popup_locators.py
       #python run_tests.py -H -v 2 tests/test_plot_locators.py
       #python run_tests.py -H -v 2 tests/test_edit_axis_locators.py
       RESULT=$?
       echo "*** $PY_VER test result: ${RESULT}"
       exit $RESULT

  - &conda_upload
    name: conda_upload
    environment:
      CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
      export REPO_DIR=`pwd`
      export PKG_NAME=jupyter-vcdat
      export LABEL=nightly
      export USER=cdat
      conda install conda-build anaconda-client
      conda config --set anaconda_upload no
      export CONDA_BLD_PATH=`pwd`/conda_build
      git clone https://github.com/cdat/conda-recipes
      cd conda-recipes
      export CONDA_RECIPES_REPO=`pwd`
      ln -s $REPO_DIR .
      cd $REPO_DIR
      python $CONDA_RECIPES_REPO/prep_for_build.py -l $LOCAL_VCDAT_VERSION -b ${CIRCLE_BRANCH}
      conda build $CHANNELS recipe
      anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/noarch/$PKG_NAME-$LOCAL_VCDAT_VERSION.`date +%Y*`0.tar.bz2 --force

  - &npm_publish
    name: npm_publish
    command: |
      npm install
      npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      npm publish --tag nightly

  - &docker_publish
    name: docker_publish
    command: |
      cd deploy
      echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
      echo "$DOCKER_TOKEN2" | docker login --username $DOCKER_USER --password-stdin $DOCKER_IMAGE_SOURCE
      docker pull aims2.llnl.gov/nimbus-basic:latest
      docker build --no-cache --tag=cdat/vcdat:nightly .
      docker image tag cdat/vcdat:nightly cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:nightly
      docker logout

jobs:

  linux_jupyter_vcdat:
    docker:
      - image: circleci/node:stretch-browsers
    environment:
      WORKDIR: "/tmp/jp-vcdat"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_firefox
      - store_artifacts:
          path: tests_html
          destination: tests_firefox_html
      #- run: sleep 5
      #- run: *run_tests_with_chrome
      #- store_artifacts:
      #    path: tests_html
      #    destination: tests_chrome_html
      - store_artifacts:
          path: jupyter-vcdat_logfile.txt
      
      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      - linux_jupyter_vcdat
      #- publish:
      #    requires:
      #      - linux_jupyter_vcdat
      #    filters:
      #      branches:
      #        only: master
