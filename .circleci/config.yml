version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh
      bash ./miniconda3.sh -b -p $WORKDIR/miniconda

  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -q conda
       conda config --set anaconda_upload no

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       ./install_script.sh
       source activate jupyter-vcdat
       conda install -n jupyter-vcdat -c cdat/label/v81 -c conda-forge testsrunner cdat_info $COVERAGE_PKGS

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       source activate jupyter-vcdat
       jupyter lab --ip='127.0.0.1'
    background: true

  - &run_jupyter_vcdat_tests
    name: run_jupyter_vcdat_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       source activate jupyter-vcdat
       pip install selenium
       pip install pyvirtualdisplay
       pip install nose
       python run_tests.py -H -v2 $COVERAGE
       RESULT=$?
       echo "*** $PY_VER test result: "${RESULT} 
       exit $RESULT

  - &conda_upload
    name: conda_upload
    environment:
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       export PKG_NAME=jupyter-vcdat
       export USER=cdat
       export VERSION=2.0.0
       if [[ $CIRCLE_BRANCH == 'master' ]]; then
        export LABEL=nightly
       else
        export LABEL=${CIRCLE_BRANCH}
       fi
       ln -s ../recipe $PKG_NAME
       python ./prep_for_build.py -l $VERSION -b ${CIRCLE_BRANCH}
       conda build $PKG_NAME $CHANNELS --python=3.6
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

  - &run_coveralls
    name: run_coveralls
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate jupyter-vcdat
       coveralls
       source deactivate

jobs:
  linux_docker_chrome_jupyter_vcdat_py3:
    docker:
      - image: circleci/node:jessie-browsers
      - image: circleci/python:3.6.2-stretch-browsers
    environment:
      WORKDIR: "workspace/test_docker_linux_jupyter_vcdat_py3"
      PY_VER: "py3"
      #COVERAGE: "-c tests/coverage.json --coverage-from-repo"
      #COVERAGE_PKGS: "coverage coveralls"
      BROWSER_TYPE: "chrome"
    steps:
      - checkout
      - run: *setup_miniconda
      #- run: *create_conda_env
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: *run_jupyter_vcdat_tests
      #- run: *run_coveralls
      - run: *conda_upload
        #- store_artifacts:
        #  path: tests_html
        #  destination: tests_html
        #- store_artifacts:
        #  path: tests_png
        #  destination: tests_png

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      - linux_docker_chrome_jupyter_vcdat_py3




