version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &create_conda_env
    name: create_conda_env
    environment:
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
       PKGS: "nodejs 'python>3' vcs jupyterlab pip nb_conda nb_conda_kernels nbsphinx easydev"
       TEST_PKGS: "testsrunner cdat_info"
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -q conda
       conda config --set anaconda_upload no
       conda create -q -n $PY_VER $CHANNELS $PKGS $TEMP_PKGS $TEST_PKGS $COVERAGE_PKGS

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       source activate $PY_VER
       python setup.py install
       jupyter labextension install . 
       jupyter serverextension enable --py vcs_backend
       # SIDECAR
       python -m pip install --no-deps --ignore-installed sidecar
       jupyter labextension install @jupyter-widgets/jupyterlab-manager
       jupyter labextension install @jupyter-widgets/jupyterlab-sidecar

       # GITHUB EXTENSION
       jupyter labextension install @jupyterlab/github
       # maybe?
       pip install jupyterlab_github
       jupyter serverextension enable --sys-prefix jupyterlab_github

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       source activate $PY_VER
       pwd
       jupyter lab --ip='127.0.0.1'
    background: true

  - &run_jupyter_vcdat_tests
    name: run_jupyter_vcdat_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       export CDAT_SETUP_PATH=${HOME}
       source activate $PY_VER
       pip install selenium
       pip install pyvirtualdisplay
       python run_tests.py -H -v2 -n 2
       RESULT=$?
       echo "*** $PY_VER test result: "${RESULT} 
       exit $RESULT

  - &conda_upload
    name: conda_upload
    environment:
       CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       export PKG_NAME=jupyter-vcdat
       export USER=cdat
       export VERSION=2.0.0
       if [[ $CIRCLE_BRANCH == 'master' ]]; then
        export LABEL=nightly
       else
        export LABEL=${CIRCLE_BRANCH}
       fi
       ln -s ../recipe $PKG_NAME
       python ./prep_for_build.py -l $VERSION -b ${CIRCLE_BRANCH}
       conda build $PKG_NAME $CHANNELS --python=3.6
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

  - &run_coveralls
    name: run_coveralls
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       source activate $PY_VER
       coveralls
       source deactivate

  - &prepare_firefox
    name: prepare_firefox
    command: |
       sudo apt-get purge -y firefox
       wget https://sourceforge.net/projects/ubuntuzilla/files/mozilla/apt/pool/main/f/firefox-mozilla-build/firefox-mozilla-build_63.0.3-0ubuntu1_amd64.deb
       sudo dpkg -i firefox-mozilla-build_63.0.3-0ubuntu1_amd64.deb
       wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz
       gunzip geckodriver-v0.23.0-linux64.tar.gz
       tar -xvf geckodriver-v0.23.0-linux64.tar
       sudo mv geckodriver /usr/local/bin
       export PATH=/usr/local/bin:$PATH

  - &start_xvfb
    name: start_xvfb
    command: |
       Xvfb -ac :99 +extension RANDR
    background: true

jobs:
  macos_jupyter_vcdat_py3:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_jupyter_vcdat_py3"
      PY_VER: "py3"
      TEMP_PKGS: "'ffmpeg>4' 'libpng>1.6.34'" 
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_jupyter_vcdat
      #- run: *run_jupyter_vcdat_tests
      #- store_artifacts:
      #    path: tests_html
      #    destination: tests_html
      #- store_artifacts:
      #    path: tests_png
      #    destination: tests_png

  linux_jupyter_vcdat_py3:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_jupyter_vcdat_py3"
      PY_VER: "py3"
      TEMP_PKGS: 'ffmpeg' 
      COVERAGE: "-c tests/coverage.json --coverage-from-repo"
      COVERAGE_PKGS: "coverage coveralls"
      BROWSER_TYPE: 'firefox'
      DISPLAY: ":99"
    steps:
      - checkout
      #- run: *start_xvfb
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *prepare_firefox
      - run: which firefox
      - run: which geckodriver
      - run: *setup_jupyter_vcdat
      - run: export $(dbus-launch)
      - run: export NSS_USE_SHARED_DB=ENABLED
      - run: *run_jupyter_vcdat
      - run: *run_jupyter_vcdat_tests
      #- run: *run_coveralls
      - run: *conda_upload
      #- store_artifacts:
      #    path: tests_html
      #    destination: tests_html
      #- store_artifacts:
      #    path: tests_png
      #    destination: tests_png

  linux_docker_jupyter_vcdat_py3:
      docker:
         - image: circleci/node:jessie-browsers
         - image: circleci/python:3.6.2-stretch-browsers
      environment:
         WORKDIR: "workspace/test_docker_linux_jupyter_vcdat_py3"
         PY_VER: "py3"
         TEMP_PKGS: 'ffmpeg' 
         #COVERAGE: "-c tests/coverage.json --coverage-from-repo"
         COVERAGE_PKGS: "coverage coveralls"
         BROWSER_TYPE: "firefox"
      steps:
        - checkout
        - run: *start_xvfb
        - run: *setup_miniconda
        - run: *create_conda_env
        - run: *setup_jupyter_vcdat
        - run: *run_jupyter_vcdat
        - run: *run_jupyter_vcdat_tests
        - store_artifacts:
            path: tests_html
            destination: tests_html
        - store_artifacts:
            path: tests_png
            destination: tests_png

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      #- macos_jupyter_vcdat_py3
      #- linux_jupyter_vcdat_py3
      - linux_docker_jupyter_vcdat_py3


