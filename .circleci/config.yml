version: 2
aliases:
  #- &setup_miniconda
  #  name: setup_miniconda
  #  command: |
  #    mkdir $WORKDIR
  #    cd $WORKDIR
  #    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh
  #    bash ./Miniconda3-latest-Linux-x86_64.sh -b -p miniconda

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightlyNew git@github.com:CDAT/cdat workspace/cdat
      # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      ./install_script.sh -v -d

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      conda list
      jupyter lab --ip='127.0.0.1'
    background: true

  - &run_tests_with_chrome
    name: run_tests_with_chrome
    environment:
      BROWSER_TYPE: "chrome"
      BROWSER_DRIVER: "/usr/bin/chromedriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      npx task test -v --ready --chrome
      RESULT=$?
      echo "*** $PY_VER test result: ${RESULT}"
      exit $RESULT

  - &run_tests_with_firefox
    name: run_tests_with_firefox
    environment:
      BROWSER_TYPE: "firefox"
      BROWSER_BINARY: "/usr/bin/firefox"
      BROWSER_DRIVER: "/usr/bin/geckodriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      npx task test -v --ready --firefox
      RESULT=$?
      echo "*** $PY_VER test result: ${RESULT}"
      exit $RESULT

  - &conda_rerender
    name: conda_rerender
    command: |
      git clone https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      conda config --set anaconda_upload no
      BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
      python $BUILD_SCRIPT -w $WORKDIR -l $LAST_STABLE -B 0 -p $PKG_NAME -b $CIRCLE_BRANCH --do_rerender

  - &conda_build
    name: conda_build
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      conda config --add channels conda-forge --force
      conda config --add channels cdat/label/nightly --force
      conda config --set channel_priority strict
      BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
      python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME --build_version $BUILD_VARIANT_VER --do_build

  #- &conda_upload
  #  name: conda_upload
  #  command: |
  #    if [[ $CIRCLE_BRANCH != "master" ]]; then
  #      exit 0
  #    fi
  #    source $WORKDIR/miniconda/etc/profile.d/conda.sh
  #    conda activate base
  #    UPLOAD_OPTIONS="-t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL"
  #    anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

  - &conda_upload
    name: conda_upload
    environment:
      CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
    command: |
      export PKG_NAME=jupyter-vcdat
      export LABEL=experimental
      export USER=downiec
      export CONDA_BLD_PATH=`pwd`/conda_build
      ./tasks.sh make_meta_yaml $LOCAL_VCDAT_VERSION.`date +%Y.%m.%d.%H.%M` ${CIRCLE_SHA1} 0
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      conda install conda-build anaconda-client
      conda config --set anaconda_upload no
      conda build $CHANNELS recipe
      BUILD_NAME=$CONDA_BLD_PATH/noarch/$PKG_NAME-$LOCAL_VCDAT_VERSION.`date +%Y*`0.tar.bz2
      anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $BUILD_NAME --force

  - &npm_publish
    name: npm_publish
    command: |
      npm install
      npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      npm publish --tag nightly

  - &docker_publish
    name: docker_publish
    command: |
      cd deploy
      echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
      echo "$DOCKER_TOKEN2" | docker login --username $DOCKER_USER --password-stdin $DOCKER_IMAGE_SOURCE
      docker pull $DOCKER_BASE_IMAGE
      docker build --no-cache --tag=cdat/vcdat:nightly .
      docker image tag cdat/vcdat:nightly cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:nightly
      docker logout

jobs:
  publish:
    docker:
      - image: circleci/node:latest
    environment:
      WORKDIR: "publish"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: source $WORKDIR/miniconda/etc/profile.d/conda.sh
      - run: conda activate base
      - run: echo `python --version`
      - run: echo `python3 --version`
      - run: conda install -c conda-forge 'python=3.7'
      - run: ./tasks.sh check_version
      #- run: *npm_publish
      - setup_remote_docker
      #- run: *docker_publish
      - run: *conda_upload

  linux_chrome:
    docker:
      - image: selenium/node-chrome
    environment:
      WORKDIR: "linux_chrome"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_chrome
      - store_artifacts:
          path: tests_html
          destination: tests_chrome_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_chrome_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

  linux_firefox:
    docker:
      - image: selenium/node-firefox
    environment:
      WORKDIR: "linux_firefox"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_jupyter_vcdat
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_firefox
      - store_artifacts:
          path: tests_html
          destination: tests_firefox_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_firefox_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      #- linux_chrome
      #- linux_firefox
      - publish
