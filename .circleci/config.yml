version: 2
aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir $WORKDIR
      cd $WORKDIR
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh
      bash ./Miniconda3-latest-Linux-x86_64.sh -b -p miniconda

  - &conda_rerender
    name: conda_rerender
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make conda-rerender conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR last_stable=$LAST_STABLE branch=$CIRCLE_BRANCH

  - &conda_build
    name: conda_build
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make conda-build conda=$WORKDIR/miniconda/bin/conda workdir=$WORKDIR artifcat_dir=$PWD/artifacts copy_conda_package=1

  - &setup_run_tests
    name: setup_run_tests
    environment:
      PKGS: "testsrunner cdat_info "
      CHANNELS: "-c cdat/label/nightly -c conda-forge"
    command: |
      ls linux_build/miniconda/etc/profile.d/
      ls $WORKDIR/miniconda/
      ls $WORKDIR/miniconda/bin/
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make setup-tests conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME extra_pkgs="$CONDA_PY_VER $LIBNETCDF"
      make conda-dump-env conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME artifact_dir=$PWD/artifacts conda_env_name=$CIRCLE_JOB

  - &setup_jupyter_vcdat
    name: setup_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      ./install_script.sh -v -d

  - &check_vcdat_versions
    name: check_npm_version
    command: |
      LOCAL_VCDAT_VERSION=`node -pe "require('./package.json').version"`
      NPM_VCDAT_VERSION=`npm view jupyter-vcdat@nightly version`
      echo "export LOCAL_VCDAT_VERSION=$LOCAL_VCDAT_VERSION" >> $BASH_ENV
      echo "export NPM_VCDAT_VERSION=$NPM_VCDAT_VERSION" >> $BASH_ENV
      function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
      if version_gt $LOCAL_VCDAT_VERSION $NPM_VCDAT_VERSION; then
        echo "Version of $LOCAL_VCDAT_VERSION in the package.json looks good."
      else
        echo "Version $LOCAL_VCDAT_VERSION in package.json is not newer than npm version of $NPM_VCDAT_VERSION and will cause Publish job to fail."
        echo "You should update version $LOCAL_VCDAT_VERSION in package.json to a version greater than $NPM_VCDAT_VERSION"
        exit 1
      fi

  - &run_jupyter_vcdat
    name: run_jupyter_vcdat
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate jupyter-vcdat
      conda list
      jupyter lab --ip='127.0.0.1'
    background: true

  - &run_tests_with_chrome
    name: run_tests_with_chrome
    environment:
      BROWSER_TYPE: "chrome"
      BROWSER_DRIVER: "/usr/bin/chromedriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make run-tests-chrome conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &run_tests_with_firefox
    name: run_tests_with_firefox
    environment:
      BROWSER_TYPE: "firefox"
      BROWSER_BINARY: "/usr/bin/firefox"
      BROWSER_DRIVER: "/usr/bin/geckodriver"
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make run-tests-firefox conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &conda_env_export
    name: conda_env_expprt
    command: |
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make conda-list conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME

  - &conda_upload
    name: conda_upload
    command: |
      if [[ $CIRCLE_BRANCH != "master" ]]; then
        exit 0
      fi
      source $WORKDIR/miniconda/etc/profile.d/conda.sh
      conda activate base
      make conda-upload conda=$WORKDIR/miniconda/bin/conda conda_env=$ENV_NAME conda_upload_token=$CONDA_UPLOAD_TOKEN user=$USER label=$LABEL

  # - &conda_upload
  #   name: conda_upload
  #   environment:
  #     CHANNELS: "-c cdat/label/nightly -c conda-forge -c cdat"
  #   command: |
  #     export REPO_DIR=`pwd`
  #     export PKG_NAME=jupyter-vcdat
  #     export LABEL=nightly
  #     export USER=cdat
  #     export GIT_DESCRIBE_HASH=${CIRCLE_SHA1}
  #     source $WORKDIR/miniconda/etc/profile.d/conda.sh
  #     conda activate base
  #     conda install conda-build anaconda-client
  #     conda config --set anaconda_upload no
  #     export CONDA_BLD_PATH=`pwd`/conda_build
  #     git clone https://github.com/cdat/conda-recipes
  #     cd conda-recipes
  #     export CONDA_RECIPES_REPO=`pwd`
  #     ln -s $REPO_DIR .
  #     cd $REPO_DIR
  #     python $CONDA_RECIPES_REPO/prep_for_build.py -l $LOCAL_VCDAT_VERSION -b ${CIRCLE_BRANCH}
  #     conda build $CHANNELS recipe
  #     BUILD_NAME=$CONDA_BLD_PATH/noarch/$PKG_NAME-$LOCAL_VCDAT_VERSION.`date +%Y*`0.tar.bz2
  #     anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $BUILD_NAME --force

  - &npm_publish
    name: npm_publish
    command: |
      npm install
      npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      npm publish --tag nightly

  - &docker_publish
    name: docker_publish
    command: |
      cd deploy
      echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
      echo "$DOCKER_TOKEN2" | docker login --username $DOCKER_USER --password-stdin $DOCKER_IMAGE_SOURCE
      docker pull $DOCKER_BASE_IMAGE
      docker build --no-cache --tag=cdat/vcdat:nightly .
      docker image tag cdat/vcdat:nightly cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:$LOCAL_VCDAT_VERSION
      docker push cdat/vcdat:nightly
      docker logout

jobs:
  # linux_setup:
  #   machine:
  #     image: selenium/node-chrome
  #   environment:
  #     WORKDIR: "/home/circleci/project/linux_build"
  #     PKG_NAME: "jupyter-vcdat"
  #     REPO_NAME: "jupyter-vcdat"
  #     LAST_STABLE: "8.2"
  #     BUILD_VARIANT_VER: "noarch"
  #   steps:
  #     - checkout
  #     - run: *setup_miniconda
  #     - run: *conda_rerender
  #     - run: *conda_build
  #     - store_artifacts:
  #         path: artifacts
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - linux_build

  linux_chrome:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "/home/circleci/project/linux_build"
      PKG_NAME: "jupyter-vcdat"
      REPO_NAME: "jupyter-vcdat"
      ENV_NAME: "test_vcdat"
      CONDA_PY_VER: "python>=3.6,<3.7"
      LIBNETCDF: "libnetcdf=*=nompi_*"
      BUILD_VARIANT_VER: "noarch"
      LAST_STABLE: "8.2"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *conda_rerender
      - run: *conda_build
      - store_artifacts:
          path: artifacts
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - linux_build
      - run: *conda_env_export
      - run: *setup_run_tests
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_chrome
      - store_artifacts:
          path: tests_html
          destination: tests_chrome_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_chrome_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

  linux_firefox:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: /home/circleci/project/linux_build
      PKG_NAME: "jupyter-vcdat"
      REPO_NAME: "jupyter-vcdat"
      ENV_NAME: "test_vcdat"
      CONDA_PY_VER: "python>=3.6,<3.7"
      LIBNETCDF: "libnetcdf=*=nompi_*"
      BUILD_VARIANT_VER: "noarch"
      LAST_STABLE: "8.2"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *conda_rerender
      - run: *conda_build
      - store_artifacts:
          path: artifacts
      - run: *conda_env_export
      - run: *setup_run_tests
      - run: *run_jupyter_vcdat
      - run: sleep 15
      - run: *run_tests_with_firefox
      - store_artifacts:
          path: tests_html
          destination: tests_firefox_html
      - store_artifacts:
          path: tests/screenshots
          destination: tests_firefox_screenshots

      # Uncomment below to upload directly to conda without merging to master
      #- run: *conda_upload

  publish:
    docker:
      - image: circleci/node:latest
    environment:
      WORKDIR: "publish"
    steps:
      - checkout
      - run: *check_vcdat_versions
      - run: *npm_publish
      - setup_remote_docker
      - run: *docker_publish
      - run: *setup_miniconda
      - run: *conda_upload

workflows:
  version: 2
  jupyter_vcdat:
    jobs:
      - linux_chrome
      - linux_firefox
      - publish:
          requires:
            - linux_chrome
            - linux_firefox
          filters:
            branches:
              only: master
